`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 05/30/2017 12:16:40 PM
// Design Name: 
// Module Name: SHA1_core
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module SHA1_core(
      input clk,
      input rst,
      //input start,
      input [511:0]block_in,
      output done,
      output [159:0]digest_out
    );
//reg start;
reg [31:0]a[80:0],b[80:0],c[80:0],d[80:0],e[80:0];
reg [31:0]h[4:0];
reg [31:0]k[3:0];
reg [31:0]w[79:0];
reg [31:0]wt[63:0];
reg [31:0]temp[79:0];
reg [6:0]w_rounds;
reg [6:0]f_rounds;
reg [1:0]sha1_state;
reg [2:0] curr_state, next_state;
reg [2:0] flag;
parameter SHA1_RESET = 0;
parameter SHA1_INIT = 1;
parameter SHA1_W_ROUNDS = 2;
parameter SHA1_ABCDE_INIT = 3;
parameter SHA1_F0_ROUNDS = 4;
parameter SHA1_F1_ROUNDS = 5;
parameter SHA1_F2_ROUNDS = 6;
parameter SHA1_F3_ROUNDS = 7;

always@(posedge clk or negedge rst) begin
     if(rst == 0) begin
        curr_state <= SHA1_RESET;
        flag <= 0;
     end else begin
        curr_state <= next_state;
     end
         
end
//always@(curr_state)
always@(*) begin
    if(flag == 1)
        next_state = SHA1_INIT;
    else if(flag == 2)
        next_state = SHA1_W_ROUNDS;
    else if(flag == 3)
        next_state = SHA1_ABCDE_INIT;
    else if(flag == 4)
        next_state = SHA1_F0_ROUNDS;
        
end
always@(curr_state) begin
    if(curr_state == SHA1_RESET) begin
        w_rounds = 16;
        f_rounds = 0;
        k[0] = 0;
        k[1] = 0;
        k[2] = 0;
        k[3] = 0;
        h[0] = 0;
        h[1] = 0;
        h[2] = 0;
        h[3] = 0;
        h[4] = 0;
        w[0] = 0;w[1] = 0;w[2] = 0;w[3] = 0;w[4] = 0;w[5] = 0;w[6] = 0;w[7] = 0;w[8] = 0;w[9] = 0;
        w[10] = 0;w[11] = 0;w[12] = 0;w[13] = 0;w[14] = 0;w[15] = 0;w[16] = 0;w[17] = 0;w[18] = 0;w[19] = 0;
        w[20] = 0;w[21] = 0;w[22] = 0;w[23] = 0;w[24] = 0;w[25] = 0;w[26] = 0;w[27] = 0;w[28] = 0;w[29] = 0;
        w[30] = 0;w[31] = 0;w[32] = 0;w[33] = 0;w[34] = 0;w[35] = 0;w[36] = 0;w[37] = 0;w[38] = 0;w[39] = 0;
        w[40] = 0;w[41] = 0;w[42] = 0;w[43] = 0;w[44] = 0;w[45] = 0;w[46] = 0;w[47] = 0;w[48] = 0;w[49] = 0;
        w[50] = 0;w[51] = 0;w[52] = 0;w[53] = 0;w[54] = 0;w[55] = 0;w[56] = 0;w[57] = 0;w[58] = 0;w[59] = 0;
        w[60] = 0;w[61] = 0;w[62] = 0;w[63] = 0;w[64] = 0;w[65] = 0;w[66] = 0;w[67] = 0;w[68] = 0;w[69] = 0;
        w[70] = 0;w[71] = 0;w[72] = 0;w[73] = 0;w[74] = 0;w[75] = 0;w[76] = 0;w[77] = 0;w[78] = 0;w[79] = 0;
        flag = 1;
    end else if(curr_state == SHA1_INIT) begin
        k[0] = 32'h5a827999;
        k[1] = 32'h6ed9eba1;
        k[2] = 32'h8f1bbcdc;
        k[3] = 32'h0xca62c1d6;    
        h[0] = 32'h67452301;
        h[1] = 32'hefcdab89;
        h[2] = 32'h98badcfe;
        h[3] = 32'h10325476;
        h[4] = 32'hc3d2e1f0;
        w[0] = 32'h61626380;
        w[1] = 32'h0;
        w[2] = 32'h0;
        w[3] = 32'h0;
        w[4] = 32'h0;
        w[5] = 32'h0;
        w[6] = 32'h0;
        w[7] = 32'h0;
        w[8] = 32'h0;
        w[9] = 32'h0;
        w[10] = 32'h0;
        w[11] = 32'h0;
        w[12] = 32'h0;
        w[13] = 32'h0;
        w[14] = 32'h0;
        w[15] = 32'h18;  
        flag = 2;   
    end else if(curr_state == SHA1_W_ROUNDS) begin
        wt[0] = w[13]^w[8]^w[2]^w[0];
        w[16] = {wt[0][30:0],wt[0][31]}; //wt << 1
        wt[1] = w[14]^w[9]^w[3]^w[1];
        w[17] = {wt[1][30:0],wt[1][31]};//wt << 1
        wt[2] = w[15]^w[10]^w[4]^w[2];
        w[18] = {wt[2][30:0],wt[2][31]};//wt << 1
        wt[3] = w[16]^w[11]^w[5]^w[3];
        w[19] = {wt[3][30:0],wt[3][31]};//wt << 1
        wt[4] = w[17]^w[12]^w[6]^w[4];
        w[20] = {wt[4][30:0],wt[4][31]};//wt << 1
        wt[5] = w[18]^w[13]^w[7]^w[5];
        w[21] = {wt[5][30:0],wt[5][31]};//wt << 1
        wt[6] = w[19]^w[14]^w[8]^w[6];
        w[22] = {wt[6][30:0],wt[6][31]};//wt << 1   
        wt[7] = w[20]^w[15]^w[9]^w[7];
        w[23] = {wt[7][30:0],wt[7][31]};//wt << 1  
        wt[8] = w[21]^w[16]^w[10]^w[8];
        w[24] = {wt[8][30:0],wt[8][31]};//wt << 1   
        wt[9] = w[22]^w[17]^w[11]^w[9];
        w[25] = {wt[9][30:0],wt[9][31]};//wt << 1   
        wt[10] = w[23]^w[18]^w[12]^w[10];
        w[26] = {wt[10][30:0],wt[10][31]};//wt << 1   
        wt[11] = w[24]^w[19]^w[13]^w[11];
        w[27] = {wt[11][30:0],wt[11][31]};//wt << 1   
        wt[12] = w[25]^w[20]^w[14]^w[12];
        w[28] = {wt[12][30:0],wt[12][31]};//wt << 1  
        wt[13] = w[26]^w[21]^w[15]^w[13];
        w[29] = {wt[13][30:0],wt[13][31]};//wt << 1  
        wt[14] = w[27]^w[22]^w[16]^w[14];
        w[30] = {wt[14][30:0],wt[14][31]};//wt << 1  
        wt[15] = w[28]^w[23]^w[17]^w[15];
        w[31] = {wt[15][30:0],wt[15][31]};//wt << 1  
        wt[16] = w[29]^w[24]^w[18]^w[16];
        w[32] = {wt[16][30:0],wt[16][31]};//wt << 1  
        wt[17] = w[30]^w[25]^w[19]^w[17];
        w[33] = {wt[17][30:0],wt[17][31]};//wt << 1  
        wt[18] = w[31]^w[26]^w[20]^w[18];
        w[34] = {wt[18][30:0],wt[18][31]};//wt << 1  
        wt[19] = w[32]^w[27]^w[21]^w[19];
        w[35] = {wt[19][30:0],wt[19][31]};//wt << 1  
        wt[20] = w[33]^w[28]^w[22]^w[20];
        w[36] = {wt[20][30:0],wt[20][31]};//wt << 1  
        wt[21] = w[34]^w[29]^w[23]^w[21];
        w[37] = {wt[21][30:0],wt[21][31]};//wt << 1  
        wt[22] = w[35]^w[30]^w[24]^w[22];
        w[38] = {wt[22][30:0],wt[22][31]};//wt << 1  
        wt[23] = w[36]^w[31]^w[25]^w[23];
        w[39] = {wt[23][30:0],wt[23][31]};//wt << 1  
        wt[24] = w[37]^w[32]^w[26]^w[24];
        w[40] = {wt[24][30:0],wt[24][31]};//wt << 1  
//        wt[25] = w[38]^w[33]^w[27]^w[25];
//        w[41] = {wt[25][30:0],wt[25][0]};//wt << 1  
//        wt[26] = w[39]^w[34]^w[28]^w[26];
//        w[42] = {wt[26][30:0],wt[26][0]};//wt << 1  
//        wt[27] = w[40]^w[35]^w[29]^w[27];
//        w[43] = {wt[27][30:0],wt[27][0]};//wt << 1  
//        wt[28] = w[41]^w[36]^w[30]^w[28];
//        w[44] = {wt[28][30:0],wt[28][0]};//wt << 1  
//        wt[29] = w[42]^w[37]^w[31]^w[29];
//        w[45] = {wt[29][30:0],wt[29][0]};//wt << 1  
//        wt[30] = w[43]^w[38]^w[32]^w[30];
//        w[46] = {wt[30][30:0],wt[30][0]};//wt << 1
//        wt[31] = w[44]^w[39]^w[33]^w[31];
//        w[47] = {wt[31][30:0],wt[31][0]};//wt << 1
//        wt[32] = w[45]^w[40]^w[34]^w[32];
//        w[48] = {wt[32][30:0],wt[32][0]};//wt << 1
//        wt[33] = w[46]^w[41]^w[35]^w[33];
//        w[49] = {wt[33][30:0],wt[33][0]};//wt << 1
//        wt[34] = w[47]^w[42]^w[36]^w[34];
//        w[50] = {wt[34][30:0],wt[34][0]};//wt << 1
//        wt[35] = w[48]^w[43]^w[37]^w[35];
//        w[51] = {wt[35][30:0],wt[35][0]};//wt << 1
//        wt[36] = w[49]^w[44]^w[38]^w[36];
//        w[52] = {wt[36][30:0],wt[36][0]};//wt << 1
//        wt[37] = w[50]^w[45]^w[39]^w[37];
//        w[53] = {wt[37][30:0],wt[37][0]};//wt << 1
//        wt[38] = w[51]^w[46]^w[40]^w[38];
//        w[54] = {wt[38][30:0],wt[38][0]};//wt << 1
//        wt[39] = w[52]^w[47]^w[41]^w[39];
//        w[55] = {wt[39][30:0],wt[39][0]};//wt << 1
//        wt[40] = w[53]^w[48]^w[42]^w[40];
//        w[56] = {wt[40][30:0],wt[40][0]};//wt << 1
//        wt[41] = w[54]^w[49]^w[43]^w[41];
//        w[57] = {wt[41][30:0],wt[41][0]};//wt << 1
//        wt[42] = w[55]^w[50]^w[44]^w[42];
//        w[58] = {wt[42][30:0],wt[42][0]};//wt << 1
//        wt[43] = w[56]^w[51]^w[45]^w[43];
//        w[59] = {wt[43][30:0],wt[43][0]};//wt << 1
//        wt[44] = w[57]^w[52]^w[46]^w[44];
//        w[60] = {wt[44][30:0],wt[44][0]};//wt << 1
//        wt[45] = w[58]^w[53]^w[47]^w[45];
//        w[61] = {wt[45][30:0],wt[45][0]};//wt << 1
//        wt[46] = w[59]^w[54]^w[48]^w[46];
//        w[62] = {wt[46][30:0],wt[46][0]};//wt << 1
//        wt[47] = w[60]^w[55]^w[49]^w[47];
//        w[63] = {wt[47][30:0],wt[47][0]};//wt << 1
//        wt[48] = w[61]^w[56]^w[50]^w[48];
//        w[64] = {wt[48][30:0],wt[48][0]};//wt << 1
//        wt[49] = w[62]^w[57]^w[51]^w[49];
//        w[65] = {wt[49][30:0],wt[49][0]};//wt << 1
//        wt[50] = w[63]^w[58]^w[52]^w[50];
//        w[66] = {wt[50][30:0],wt[50][0]};//wt << 1
//        wt[51] = w[64]^w[59]^w[53]^w[51];
//        w[67] = {wt[51][30:0],wt[51][0]};//wt << 1
//        wt[52] = w[65]^w[60]^w[54]^w[52];
//        w[68] = {wt[52][30:0],wt[52][0]};//wt << 1
//        wt[53] = w[66]^w[61]^w[55]^w[53];
//        w[69] = {wt[53][30:0],wt[53][0]};//wt << 1
//        wt[54] = w[67]^w[62]^w[56]^w[54];
//        w[70] = {wt[54][30:0],wt[54][0]};//wt << 1
//        wt[55] = w[68]^w[63]^w[57]^w[55];
//        w[71] = {wt[55][30:0],wt[55][0]};//wt << 1        
//        wt[56] = w[69]^w[64]^w[58]^w[56];
//        w[72] = {wt[56][30:0],wt[56][0]};//wt << 1
//        wt[57] = w[70]^w[65]^w[59]^w[57];
//        w[73] = {wt[57][30:0],wt[57][0]};//wt << 1                
//        wt[58] = w[71]^w[66]^w[60]^w[58];
//        w[74] = {wt[58][30:0],wt[58][0]};//wt << 1                
//        wt[59] = w[72]^w[67]^w[61]^w[59];
//        w[75] = {wt[59][30:0],wt[59][0]};//wt << 1                
//        wt[60] = w[73]^w[68]^w[62]^w[60];
//        w[76] = {wt[60][30:0],wt[60][0]};//wt << 1
//        wt[61] = w[74]^w[69]^w[63]^w[61];
//        w[77] = {wt[61][30:0],wt[61][0]};//wt << 1  
//        wt[62] = w[75]^w[70]^w[64]^w[62];
//        w[78] = {wt[62][30:0],wt[62][0]};//wt << 1            
//        wt[63] = w[76]^w[71]^w[65]^w[63];
//        w[79] = {wt[63][30:0],wt[63][0]};//wt << 1            
        flag = 3;
    end else if(curr_state == SHA1_ABCDE_INIT) begin
        a[0] = h[0];
        b[0] = h[1];
        c[0] = h[2];
        d[0] = h[3];
        e[0] = h[4];
        flag = 4;
    end else if(curr_state == SHA1_F0_ROUNDS) begin
        //F(0) starts
        temp[0] = {a[0][26:0],a[0][31:27]} + ((b[0] & c[0]) | ((~b[0]) & d[0])) + e[0] + w[0] + k[0] ;
        e[1] = d[0];
        d[1] = c[0];   
        c[1] = {b[0][1:0],b[0][31:2]}; // b[t]<<30
        b[1] = a[0];
        a[1] = temp[0];
        temp[1] = {a[1][26:0],a[1][31:27]} + ((b[1] & c[1]) | ((~b[1]) & d[1])) + e[1] + w[1] + k[0] ;
        e[2] = d[1];
        d[2] = c[1];   
        c[2] = {b[1][1:0],b[1][31:2]}; // b[t]<<30
        b[2] = a[1];
        a[2] = temp[1];
        temp[2] = {a[2][26:0],a[2][31:27]} + ((b[2] & c[2]) | ((~b[2]) & d[2])) + e[2] + w[2] + k[0] ;
        e[3] = d[2];
        d[3] = c[2];   
        c[3] = {b[2][1:0],b[2][31:2]}; // b[t]<<30
        b[3] = a[2];
        a[3] = temp[2];
        temp[3] = {a[3][26:0],a[3][31:27]} + ((b[3] & c[3]) | ((~b[3]) & d[3])) + e[3] + w[3] + k[0] ;
        e[4] = d[3];
        d[4] = c[3];   
        c[4] = {b[3][1:0],b[3][31:2]}; // b[t]<<30
        b[4] = a[3];
        a[4] = temp[3];
        temp[4] = {a[4][26:0],a[4][31:27]} + ((b[4] & c[4]) | ((~b[4]) & d[4])) + e[4] + w[4] + k[0] ;
        e[5] = d[4];
        d[5] = c[4];   
        c[5] = {b[4][1:0],b[4][31:2]}; // b[t]<<30
        b[5] = a[4];
        a[5] = temp[4];
        temp[5] = {a[5][26:0],a[5][31:27]} + ((b[5] & c[5]) | ((~b[5]) & d[5])) + e[5] + w[5] + k[0] ;
        e[6] = d[5];
        d[6] = c[5];   
        c[6] = {b[5][1:0],b[5][31:2]}; // b[t]<<30
        b[6] = a[5];
        a[6] = temp[5];
        temp[6] = {a[6][26:0],a[6][31:27]} + ((b[6] & c[6]) | ((~b[6]) & d[6])) + e[6] + w[6] + k[0] ;
        e[7] = d[6];
        d[7] = c[6];   
        c[7] = {b[6][1:0],b[6][31:2]}; // b[t]<<30
        b[7] = a[6];
        a[7] = temp[6];
        temp[7] = {a[7][26:0],a[7][31:27]} + ((b[7] & c[7]) | ((~b[7]) & d[7])) + e[7] + w[7] + k[0] ;
        e[8] = d[7];
        d[8] = c[7];   
        c[8] = {b[7][1:0],b[7][31:2]}; // b[t]<<30
        b[8] = a[7];
        a[8] = temp[7];       
        temp[8] = {a[8][26:0],a[8][31:27]} + ((b[8] & c[8]) | ((~b[8]) & d[8])) + e[8] + w[8] + k[0] ;
        e[9] = d[8];
        d[9] = c[8];   
        c[9] = {b[8][1:0],b[8][31:2]}; // b[t]<<30
        b[9] = a[8];
        a[9] = temp[8];       
        temp[9] = {a[9][26:0],a[9][31:27]} + ((b[9] & c[9]) | ((~b[9]) & d[9])) + e[9] + w[9] + k[0] ;
        e[10] = d[9];
        d[10] = c[9];   
        c[10] = {b[9][1:0],b[9][31:2]}; // b[t]<<30
        b[10] = a[9];
        a[10] = temp[9];
        temp[10] = {a[10][26:0],a[10][31:27]} + ((b[10] & c[10]) | ((~b[10]) & d[10])) + e[10] + w[10] + k[0] ;
        e[11] = d[10];
        d[11] = c[10];   
        c[11] = {b[10][1:0],b[10][31:2]}; // b[t]<<30
        b[11] = a[10];
        a[11] = temp[10];
        temp[11] = {a[11][26:0],a[11][31:27]} + ((b[11] & c[11]) | ((~b[11]) & d[11])) + e[11] + w[11] + k[0] ;
        e[12] = d[11];
        d[12] = c[11];   
        c[12] = {b[11][1:0],b[11][31:2]}; // b[t]<<30
        b[12] = a[11];
        a[12] = temp[11];
        temp[12] = {a[12][26:0],a[12][31:27]} + ((b[12] & c[12]) | ((~b[12]) & d[12])) + e[12] + w[12] + k[0] ;
        e[13] = d[12];
        d[13] = c[12];   
        c[13] = {b[12][1:0],b[12][31:2]}; // b[t]<<30
        b[13] = a[12];
        a[13] = temp[12];
        temp[13] = {a[13][26:0],a[13][31:27]} + ((b[13] & c[13]) | ((~b[13]) & d[13])) + e[13] + w[13] + k[0] ;
        e[14] = d[13];
        d[14] = c[13];   
        c[14] = {b[13][1:0],b[13][31:2]}; // b[t]<<30
        b[14] = a[13];
        a[14] = temp[13];
        temp[14] = {a[14][26:0],a[14][31:27]} + ((b[14] & c[14]) | ((~b[14]) & d[14])) + e[14] + w[14] + k[0] ;
        e[15] = d[14];
        d[15] = c[14];   
        c[15] = {b[14][1:0],b[14][31:2]}; // b[t]<<30
        b[15] = a[14];
        a[15] = temp[14];
        temp[15] = {a[15][26:0],a[15][31:27]} + ((b[15] & c[15]) | ((~b[15]) & d[15])) + e[15] + w[15] + k[0] ;
        e[16] = d[15];
        d[16] = c[15];   
        c[16] = {b[15][1:0],b[15][31:2]}; // b[t]<<30
        b[16] = a[15];
        a[16] = temp[15];
        temp[16] = {a[16][26:0],a[16][31:27]} + ((b[16] & c[16]) | ((~b[16]) & d[16])) + e[16] + w[16] + k[0] ;
        e[17] = d[16];
        d[17] = c[16];   
        c[17] = {b[16][1:0],b[16][31:2]}; // b[t]<<30
        b[17] = a[16];
        a[17] = temp[16];
        temp[17] = {a[17][26:0],a[17][31:27]} + ((b[17] & c[17]) | ((~b[17]) & d[17])) + e[17] + w[17] + k[0] ;
        e[18] = d[17];
        d[18] = c[17];   
        c[18] = {b[17][1:0],b[17][31:2]}; // b[t]<<30
        b[18] = a[17];
        a[18] = temp[17];
        temp[18] = {a[18][26:0],a[18][31:27]} + ((b[18] & c[18]) | ((~b[18]) & d[18])) + e[18] + w[18] + k[0] ;
        e[19] = d[18];
        d[19] = c[18];   
        c[19] = {b[18][1:0],b[18][31:2]}; // b[t]<<30
        b[19] = a[18];
        a[19] = temp[18];       
        temp[19] = {a[19][26:0],a[19][31:27]} + ((b[19] & c[19]) | ((~b[19]) & d[19])) + e[19] + w[19] + k[0] ;
        e[20] = d[19];
        d[20] = c[19];   
        c[20] = {b[19][1:0],b[19][31:2]}; // b[t]<<30
        b[20] = a[19];
        a[20] = temp[19];
        //F(1) starts
        temp[20] = {a[20][26:0],a[20][31:27]} + (b[20] ^ c[20] ^ d[20]) + e[20] + w[20] + k[1] ;
        e[21] = d[20];
        d[21] = c[20];   
        c[21] = {b[20][1:0],b[20][31:2]}; // b[t]<<30
        b[21] = a[20];
        a[21] = temp[20];
        temp[21] = {a[21][26:0],a[21][31:27]} + (b[21] ^ c[21] ^ d[21]) + e[21] + w[21] + k[1] ;
        e[22] = d[21];
        d[22] = c[21];   
        c[22] = {b[21][1:0],b[21][31:2]}; // b[t]<<30
        b[22] = a[21];
        a[22] = temp[21];
        temp[22] = {a[22][26:0],a[22][31:27]} + (b[22] ^ c[22] ^ d[22]) + e[22] + w[22] + k[1] ;
        e[23] = d[22];
        d[23] = c[22];   
        c[23] = {b[22][1:0],b[22][31:2]}; // b[t]<<30
        b[23] = a[22];
        a[23] = temp[22];
        temp[23] = {a[23][26:0],a[23][31:27]} + (b[23] ^ c[23] ^ d[23]) + e[23] + w[23] + k[1] ;
        e[24] = d[23];
        d[24] = c[23];   
        c[24] = {b[23][1:0],b[23][31:2]}; // b[t]<<30
        b[24] = a[23];
        a[24] = temp[23];
        temp[24] = {a[24][26:0],a[24][31:27]} + (b[24] ^ c[24] ^ d[24]) + e[24] + w[24] + k[1] ;
        e[25] = d[24];
        d[25] = c[24];   
        c[25] = {b[24][1:0],b[24][31:2]}; // b[t]<<30
        b[25] = a[24];
        a[25] = temp[24];
        temp[25] = {a[25][26:0],a[25][31:27]} + (b[25] ^ c[25] ^ d[25]) + e[25] + w[25] + k[1] ;
        e[26] = d[25];
        d[26] = c[25];   
        c[26] = {b[25][1:0],b[25][31:2]}; // b[t]<<30
        b[26] = a[25];
        a[26] = temp[25];        
        temp[26] = {a[26][26:0],a[26][31:27]} + (b[26] ^ c[26] ^ d[26]) + e[26] + w[26] + k[1] ;
        e[27] = d[26];
        d[27] = c[26];   
        c[27] = {b[26][1:0],b[26][31:2]}; // b[t]<<30
        b[27] = a[26];
        a[27] = temp[26]; 
        temp[27] = {a[27][26:0],a[27][31:27]} + (b[27] ^ c[27] ^ d[27]) + e[27] + w[27] + k[1] ;
        e[28] = d[27];
        d[28] = c[27];   
        c[28] = {b[27][1:0],b[27][31:2]}; // b[t]<<30
        b[28] = a[27];
        a[28] = temp[27];
        temp[28] = {a[28][26:0],a[28][31:27]} + (b[28] ^ c[28] ^ d[28]) + e[28] + w[28] + k[1] ;
        e[29] = d[28];
        d[29] = c[28];   
        c[29] = {b[28][1:0],b[28][31:2]}; // b[t]<<30
        b[29] = a[28];
        a[29] = temp[28];
        temp[29] = {a[29][26:0],a[29][31:27]} + (b[29] ^ c[29] ^ d[29]) + e[29] + w[29] + k[1] ;
        e[30] = d[29];
        d[30] = c[29];   
        c[30] = {b[29][1:0],b[29][31:2]}; // b[t]<<30
        b[30] = a[29];
        a[30] = temp[29];                             
        temp[30] = {a[30][26:0],a[30][31:27]} + (b[30] ^ c[30] ^ d[30]) + e[30] + w[30] + k[1] ;
        e[31] = d[30];
        d[31] = c[30];   
        c[31] = {b[30][1:0],b[30][31:2]}; // b[t]<<30
        b[31] = a[30];
        a[31] = temp[30];
        temp[30] = {a[30][26:0],a[30][31:27]} + (b[30] ^ c[30] ^ d[30]) + e[30] + w[30] + k[1] ;
        e[31] = d[30];
        d[31] = c[30];   
        c[31] = {b[30][1:0],b[30][31:2]}; // b[t]<<30
        b[31] = a[30];
        a[31] = temp[30];
        temp[31] = {a[31][26:0],a[31][31:27]} + (b[31] ^ c[31] ^ d[31]) + e[31] + w[31] + k[1] ;
        e[32] = d[31];
        d[32] = c[31];   
        c[32] = {b[31][1:0],b[31][31:2]}; // b[t]<<30
        b[32] = a[31];
        a[32] = temp[31];
        temp[32] = {a[32][26:0],a[32][31:27]} + (b[32] ^ c[32] ^ d[32]) + e[32] + w[32] + k[1] ;
        e[33] = d[32];
        d[33] = c[32];   
        c[33] = {b[32][1:0],b[32][31:2]}; // b[t]<<30
        b[33] = a[32];
        a[33] = temp[32];
        temp[33] = {a[33][26:0],a[33][31:27]} + (b[33] ^ c[33] ^ d[33]) + e[33] + w[33] + k[1] ;
        e[34] = d[33];
        d[34] = c[33];   
        c[34] = {b[33][1:0],b[33][31:2]}; // b[t]<<30
        b[34] = a[33];
        a[34] = temp[33];
        temp[34] = {a[34][26:0],a[34][31:27]} + (b[34] ^ c[34] ^ d[34]) + e[34] + w[34] + k[1] ;
        e[35] = d[34];
        d[35] = c[34];   
        c[35] = {b[34][1:0],b[34][31:2]}; // b[t]<<30
        b[35] = a[34];
        a[35] = temp[34];
        temp[35] = {a[35][26:0],a[35][31:27]} + (b[35] ^ c[35] ^ d[35]) + e[35] + w[35] + k[1] ;
        e[36] = d[35];
        d[36] = c[35];   
        c[36] = {b[35][1:0],b[35][31:2]}; // b[t]<<30
        b[36] = a[35];
        a[36] = temp[35];        
        temp[36] = {a[36][26:0],a[36][31:27]} + (b[36] ^ c[36] ^ d[36]) + e[36] + w[36] + k[1] ;
        e[37] = d[36];
        d[37] = c[36];   
        c[37] = {b[36][1:0],b[36][31:2]}; // b[t]<<30
        b[37] = a[36];
        a[37] = temp[36]; 
        temp[37] = {a[37][26:0],a[37][31:27]} + (b[37] ^ c[37] ^ d[37]) + e[37] + w[37] + k[1] ;
        e[38] = d[37];
        d[38] = c[37];   
        c[38] = {b[37][1:0],b[37][31:2]}; // b[t]<<30
        b[38] = a[37];
        a[38] = temp[37];
        temp[38] = {a[38][26:0],a[38][31:27]} + (b[38] ^ c[38] ^ d[38]) + e[38] + w[38] + k[1] ;
        e[39] = d[38];
        d[39] = c[38];   
        c[39] = {b[38][1:0],b[38][31:2]}; // b[t]<<30
        b[39] = a[38];
        a[39] = temp[38];
        temp[39] = {a[39][26:0],a[39][31:27]} + (b[39] ^ c[39] ^ d[39]) + e[39] + w[39] + k[1] ;
        e[40] = d[39];
        d[40] = c[39];   
        c[40] = {b[39][1:0],b[39][31:2]}; // b[t]<<30
        b[40] = a[39];
        a[40] = temp[39];                             
//        temp[40] = {a[30][26:0],a[30][31:27]} + (b[30] ^ c[30] ^ d[30]) + e[30] + w[30] + k[1] ;
//        e[31] = d[30];
//        d[31] = c[30];   
//        c[31] = {b[30][1:0],b[30][31:2]}; // b[t]<<30
//        b[31] = a[30];
//        a[31] = temp[30]; 
        flag = 5;
    end

end
endmodule
